##############################################################################
#                                                                            #
# IAR AT90S C-Compiler V1.30A/WIN                                            #
#                                                                            #
#       Internal versions FE4.40D CO1.10K CG1.30A GL1.06I CD1.04A            #
#                         AF1.25A AB1.30A EB1.30A                            #
#                                                                            #
#       Compile time  =  21/Jan/1999  11:31:20                               #
#       Target option =  Max 64 KB data +   8 KB code (8515 4414...)         #
#       Memory model  =  small                                               #
#       Source file   =  c:\projects\at17c8515\verifyresetpolarity.c         #
#       List file     =  c:\projects\at17c8515\debug\list\verifyresetpolarity.lst#
#       Object file   =  c:\projects\at17c8515\debug\obj\verifyresetpolarity.r90#
#       Command line  =  -v1 -ms -OC:\Projects\at17c8515\Debug\Obj\ -e -gA   #
#                        -RCODE -r0e -LC:\Projects\at17c8515\Debug\List\ -q  #
#                        -t8 -IC:\IAR\EW21\A90\inc\ -K                       #
#                        C:\Projects\at17c8515\VerifyResetPolarity.c         #
#                                                                            #
#                                             (c) Copyright IAR Systems 1997 #
##############################################################################

   \                     	NAME	verifyresetpolarity(17)
   \                     	RSEG	CODE(0)
   \                     	EXTERN	BitDelay
   \                     	EXTERN	GetByte
   \                     	EXTERN	SendByte
   \                     	EXTERN	SendStartBit
   \                     	EXTERN	SendStopBit
   \                     	PUBLIC	VerifyResetPolarity
   \                     	EXTERN	?PROLOGUE4_L09
   \                     	EXTERN	?EPILOGUE_B4_L09
   \                     	EXTERN	?CL1S_1_30_L08
   \                     	RSEG	CODE
   \                     VerifyResetPolarity:
      1          // VerifyResetPolarity.c
      2          // 4 bytes are read from locations 0x20000 through 0x20003
      3          // The bytes are verified to be of all the same value. If they are then the value is returned.
      4          // return value = 0xff = active high reset and active low output enable.
      5          // return value = 0x00 = active low reset and active high output enable.
      6          // If they aren't then 0xaa is returned to signal an error condition.
      7          
      8          #include "at17c.h"
      9           
     10          extern void BitDelay(void);
     11          extern unsigned char SendByte(unsigned char byte, unsigned char order);
     12          extern unsigned char GetByte(unsigned char lastbyte);
     13          extern void SendStartBit(void);
     14          extern void SendStopBit(void);
     15          
     16          unsigned char VerifyResetPolarity(void) {
   \   00000000   ....                       RCALL   ?PROLOGUE4_L09
     17          
     18          unsigned char loc_1;
     19          unsigned char loc_2;
     20          unsigned char loc_3;
     21          unsigned char loc_4;
     22          unsigned char value;
     23          
     24              PORTB &= 0xfb; // bring SER_EN low
   \   00000002   C298                       CBI     LOW(24),LOW(2)
     25              BitDelay(); // for good measure
   \   00000004   ....                       RCALL   BitDelay
     26          
     27              SendStartBit();
   \   00000006   ....                       RCALL   SendStartBit
     28              SendByte(AT17C010 + WRITE,MSB_FIRST);  // send device address byte
   \   00000008   4FEF                       LDI     R20,255
   \   0000000A   06EA                       LDI     R16,166
   \   0000000C   ....                       RCALL   SendByte
     29              SendByte(0x00,MSB_FIRST);              // 1st address byte ... most significant byte first
   \   0000000E   4FEF                       LDI     R20,255
   \   00000010   0027                       CLR     R16
   \   00000012   ....                       RCALL   SendByte
     30              SendByte(0x00,MSB_FIRST);              // 2nd address byte ... most significant byte first
   \   00000014   4FEF                       LDI     R20,255
   \   00000016   0027                       CLR     R16
   \   00000018   ....                       RCALL   SendByte
     31              SendByte(0x02,MSB_FIRST);              // 3rd address byte ... most significant byte first
   \   0000001A   4FEF                       LDI     R20,255
   \   0000001C   02E0                       LDI     R16,2
   \   0000001E   ....                       RCALL   SendByte
     32           
     33              SendStartBit();
   \   00000020   ....                       RCALL   SendStartBit
     34              SendByte(AT17C010 + READ,MSB_FIRST);  // send device address byte with read
   \   00000022   4FEF                       LDI     R20,255
   \   00000024   07EA                       LDI     R16,167
   \   00000026   ....                       RCALL   SendByte
     35           
     36              loc_1 = GetByte(0);
   \   00000028   0027                       CLR     R16
   \   0000002A   ....                       RCALL   GetByte
   \   0000002C   B02F                       MOV     R27,R16
     37              loc_2 = GetByte(0);
   \   0000002E   0027                       CLR     R16
   \   00000030   ....                       RCALL   GetByte
   \   00000032   A02F                       MOV     R26,R16
     38              loc_3 = GetByte(0);
   \   00000034   0027                       CLR     R16
   \   00000036   ....                       RCALL   GetByte
   \   00000038   902F                       MOV     R25,R16
     39              loc_4 = GetByte(1);
   \   0000003A   01E0                       LDI     R16,1
   \   0000003C   ....                       RCALL   GetByte
   \   0000003E   802F                       MOV     R24,R16
     40              SendStopBit();
   \   00000040   ....                       RCALL   SendStopBit
     41          
     42              PORTB |= 0x04; // bring SER_EN high
   \   00000042   C29A                       SBI     LOW(24),LOW(2)
     43              
     44              if ((loc_1 == loc_2) && (loc_2 == loc_3) && (loc_3 == loc_4))
   \   00000044   BA17                       CP      R27,R26
   \   00000046   31F4                       BRNE    ?0003
   \   00000048   A917                       CP      R26,R25
   \   0000004A   21F4                       BRNE    ?0003
   \   0000004C   9817                       CP      R25,R24
   \   0000004E   11F4                       BRNE    ?0003
     45                  value = loc_1; // valid reset/oe polarity
   \   00000050   0B2F                       MOV     R16,R27
     46              else
   \   00000052   01C0                       RJMP    ?0006
   \                     ?0003:
     47                  value = 0xaa; // error
   \   00000054   0AEA                       LDI     R16,170
   \                     ?0006:
     48                  
     49              return(value);
     50                  
     51          }
   \   00000056   E4E0                       LDI     R30,4
   \   00000058   ....                       RJMP    ?EPILOGUE_B4_L09
   \                     ;	value           	R16
   \                     ;	loc_4           	R24
   \                     ;	loc_3           	R25
   \                     ;	loc_2           	R26
   \                     ;	loc_1           	R27
   \                     	END

Source file: c:\projects\at17c8515\verifyresetpolarity.c
Errors: none
Warnings: none
Code size: 90
Constant size: 0
Static variable size: 0

