##############################################################################
#                                                                            #
# IAR AT90S C-Compiler V1.30A/WIN                                            #
#                                                                            #
#       Internal versions FE4.40D CO1.10K CG1.30A GL1.06I CD1.04A            #
#                         AF1.25A AB1.30A EB1.30A                            #
#                                                                            #
#       Compile time  =  21/Jan/1999  11:31:15                               #
#       Target option =  Max 64 KB data +   8 KB code (8515 4414...)         #
#       Memory model  =  small                                               #
#       Source file   =  c:\projects\at17c8515\main.c                        #
#       List file     =  c:\projects\at17c8515\debug\list\main.lst           #
#       Object file   =  c:\projects\at17c8515\debug\obj\main.r90            #
#       Command line  =  -v1 -ms -OC:\Projects\at17c8515\Debug\Obj\ -e -gA   #
#                        -RCODE -r0e -LC:\Projects\at17c8515\Debug\List\ -q  #
#                        -t8 -IC:\IAR\EW21\A90\inc\ -K                       #
#                        C:\Projects\at17c8515\Main.c                        #
#                                                                            #
#                                             (c) Copyright IAR Systems 1997 #
##############################################################################

   \                     	NAME	main(17)
   \                     	RSEG	CODE(0)
   \                     	RSEG	UDATA1(0)
   \                     	EXTERN	Init
   \                     	EXTERN	ProgramResetPolarity
   \                     	EXTERN	ReadPage
   \                     	EXTERN	VerifyResetPolarity
   \                     	EXTERN	WritePage
   \                     	PUBLIC	main
   \                     	PUBLIC	rdbuf
   \                     	PUBLIC	t0_timed_out
   \                     	PUBLIC	t1_timed_out
   \                     	PUBLIC	wrbuf
   \                     	EXTERN	?CL1S_1_30_L08
   \                     	RSEG	CODE
   \                     main:
      1          // main
      2          // use the atstk200 starter kit and external prototype board to program
      3          // an Atmel AT17C010 device. Leds on PORTC are used for visual status indicators
      4          // 4.7k ohm pull-up resistors are used on SDA and SCL
      5          
      6          #include "at17c.h"
      7          
      8          volatile unsigned char t0_timed_out;
      9          volatile unsigned char t1_timed_out;
     10          unsigned char wrbuf[PAGE_SIZE];
     11          unsigned char rdbuf[PAGE_SIZE];
     12          
     13          extern void WritePage(unsigned int address, unsigned char *bufptr);
     14          extern void ReadPage(unsigned int address, unsigned char *bufptr);
     15          void ProgramResetPolarity(unsigned char state);
     16          unsigned char VerifyResetPolarity(void);
     17          extern void Init(void);
     18          
     19          void C_task main(void) {
     20          
     21          unsigned int address = 0;
   \   00000000   8827                       CLR     R24
   \   00000002   9927                       CLR     R25
     22          unsigned char i;
     23          
     24              Init();
   \   00000004   ....                       RCALL   Init
     25          
     26              _SEI(); // enable interrupts
   \   00000006   7894                       SEI     
     27          
     28              // init test buffer
     29              for (i = 0; i < PAGE_SIZE; i++)
   \   00000008   0027                       CLR     R16
   \                     ?0003:
   \   0000000A   0038                       CPI     R16,LOW(128)
   \   0000000C   38F4                       BRCC    ?0002
     30                  wrbuf[i] = i;
   \   0000000E   E02F                       MOV     R30,R16
   \   00000010   FF27                       CLR     R31
   \   00000012   ....                       SUBI    R30,LOW(-(wrbuf))
   \   00000014   ....                       SBCI    R31,HIGH(-(wrbuf))
   \   00000016   0083                       ST      Z,R16
   \   00000018   0395                       INC     R16
   \   0000001A   F7CF                       RJMP    ?0003
   \                     ?0002:
     31          
     32              while (1) {
   \   0000001C   01E0                       LDI     R16,LOW(1)
   \   0000001E   10E0                       LDI     R17,0
   \   00000020   012B                       OR      R16,R17
   \   00000022   09F4                       BRNE    $+4
   \   00000024   42C0                       RJMP    ?0006
     33           
     34                  PORTC = 0x00; // leds off
   \   00000026   0027                       CLR     R16
   \   00000028   05BB                       OUT     LOW(21),R16
     35           
     36                  for (address = 0; address < MAX_PAGES; address++) {
   \   0000002A   8827                       CLR     R24
   \   0000002C   9927                       CLR     R25
   \                     ?0010:
   \   0000002E   8030                       CPI     R24,LOW(0)
   \   00000030   04E0                       LDI     R16,LOW(4)
   \   00000032   9007                       CPC     R25,R16
   \   00000034   98F7                       BRCC    ?0002
     37                      WritePage(address,&wrbuf[0]);
   \   00000036   ....                       LDI     R20,LOW(wrbuf)
   \   00000038   ....                       LDI     R21,(wrbuf >> 8)
   \   0000003A   082F                       MOV     R16,R24
   \   0000003C   192F                       MOV     R17,R25
   \   0000003E   ....                       RCALL   WritePage
     38                      PORTC = address; // leds on
   \   00000040   082F                       MOV     R16,R24
   \   00000042   05BB                       OUT     LOW(21),R16
     39                      ReadPage(address,&rdbuf[0]);
   \   00000044   ....                       LDI     R20,LOW(rdbuf)
   \   00000046   ....                       LDI     R21,(rdbuf >> 8)
   \   00000048   082F                       MOV     R16,R24
   \   0000004A   192F                       MOV     R17,R25
   \   0000004C   ....                       RCALL   ReadPage
     40                      
     41                      // verify programmed page
     42                      for (i = 0; i < PAGE_SIZE; i++) {
   \   0000004E   0027                       CLR     R16
   \                     ?0014:
   \   00000050   0038                       CPI     R16,LOW(128)
   \   00000052   80F4                       BRCC    ?0013
     43                          if (wrbuf[i] != rdbuf[i]) {
   \   00000054   E02F                       MOV     R30,R16
   \   00000056   FF27                       CLR     R31
   \   00000058   ....                       SUBI    R30,LOW(-(wrbuf))
   \   0000005A   ....                       SBCI    R31,HIGH(-(wrbuf))
   \   0000005C   1081                       LD      R17,Z
   \   0000005E   E02F                       MOV     R30,R16
   \   00000060   FF27                       CLR     R31
   \   00000062   ....                       SUBI    R30,LOW(-(rdbuf))
   \   00000064   ....                       SBCI    R31,HIGH(-(rdbuf))
   \   00000066   2081                       LD      R18,Z
   \   00000068   1217                       CP      R17,R18
   \   0000006A   11F0                       BREQ    ?0018
     44                              PORTC = 0xff; // leds on
   \   0000006C   1FEF                       LDI     R17,255
   \   0000006E   15BB                       OUT     LOW(21),R17
   \                     ?0018:
   \   00000070   0395                       INC     R16
   \   00000072   EECF                       RJMP    ?0014
   \                     ?0013:
     45                          }    
     46                      }
     47                      
     48                      ProgramResetPolarity(0);
   \   00000074   0027                       CLR     R16
   \   00000076   ....                       RCALL   ProgramResetPolarity
     49                      if (VerifyResetPolarity()) {
   \   00000078   ....                       RCALL   VerifyResetPolarity
   \   0000007A   0023                       TST     R16
   \   0000007C   11F0                       BREQ    ?0020
     50                              PORTC = 0xaa;
   \   0000007E   0AEA                       LDI     R16,170
   \   00000080   05BB                       OUT     LOW(21),R16
   \                     ?0020:
     51                      }    
     52                    
     53                      ProgramResetPolarity(0xff);
   \   00000082   0FEF                       LDI     R16,255
   \   00000084   ....                       RCALL   ProgramResetPolarity
     54                      if (!VerifyResetPolarity()) {
   \   00000086   ....                       RCALL   VerifyResetPolarity
   \   00000088   0023                       TST     R16
   \   0000008A   11F4                       BRNE    ?0022
     55                              PORTC = 0x55;
   \   0000008C   05E5                       LDI     R16,85
   \   0000008E   05BB                       OUT     LOW(21),R16
   \                     ?0022:
     56                      }    
     57                      
     58                      // clear verify buf
     59                      for (i = 0; i < PAGE_SIZE; i++)
   \   00000090   0027                       CLR     R16
   \                     ?0024:
   \   00000092   0038                       CPI     R16,LOW(128)
   \   00000094   40F4                       BRCC    ?0023
     60                          rdbuf[i] = 0; 
   \   00000096   1127                       CLR     R17
   \   00000098   E02F                       MOV     R30,R16
   \   0000009A   FF27                       CLR     R31
   \   0000009C   ....                       SUBI    R30,LOW(-(rdbuf))
   \   0000009E   ....                       SBCI    R31,HIGH(-(rdbuf))
   \   000000A0   1083                       ST      Z,R17
   \   000000A2   0395                       INC     R16
     61                  }    
   \   000000A4   F6CF                       RJMP    ?0024
   \                     ?0023:
   \   000000A6   0196                       ADIW    R24,LWRD(1)
     62                  
     63              } // while (1)
   \   000000A8   C2CF                       RJMP    ?0010
     64          
     65          } // main
   \                     ?0006:
   \   000000AA   0895                       RET     
   \                     ;	i               	R16
   \                     ;	address         	R24-R25
   \                     	RSEG	UDATA1
   \                     t0_timed_out:
   \                     	DS	1
   \                     t1_timed_out:
   \                     	DS	1
   \                     wrbuf:
   \                     	DS	128
   \                     rdbuf:
   \                     	DS	128
   \                     	END

Source file: c:\projects\at17c8515\main.c
Errors: none
Warnings: none
Code size: 172
Constant size: 0
Static variable size: 258

