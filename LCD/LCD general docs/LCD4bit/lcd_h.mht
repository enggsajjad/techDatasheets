From: <Saved by Microsoft Internet Explorer 5>
Subject: lcd.h
Date: Wed, 12 Nov 2008 09:28:51 +0500
MIME-Version: 1.0
Content-Type: text/html;
	charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.latke.net/lcd/lcd.h.html
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2180

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>lcd.h</TITLE>
<META http-equiv=3DCONTENT-TYPE content=3D"text/html; =
charset=3Dwindows-1252">
<META content=3D"MSHTML 6.00.2900.2180" name=3DGENERATOR>
<META content=3D"Andy Peters" name=3DAUTHOR>
<META content=3D20040726;16232689 name=3DCREATED>
<META content=3D"Andy Peters" name=3DCHANGEDBY>
<META content=3D20040726;16384682 name=3DCHANGED></HEAD>
<BODY lang=3Den-US><PRE>/*
 * lcd.h: definitions and headers for LCD control.
 *
 * <FONT face=3D"Courier New, monospace">=A9</FONT> 2004, 2006 ASP =
Digital.  All rights reserved.
 * Andy Peters, devel@latke.net
 * 11 Dec 2006: add LcdWriteCGRAM()
 */
#ifndef _LCD_H
#define _LCD_H

/*
 * LcdWriteChar()
 * Writes a character to the display at the current cursor location.
 * Parameters:=20
 *     unsigned char dval: the character to write to the display (see
 *       the Hitachi data sheet)
 * Returns: nothing
 */
void LcdWriteChar(unsigned char dval);

/*
 * LcdWriteString()
 * Writes a string to the display, starting at the current cursor =
location.
 * Parameters:=20
 *     unsigned char *str: pointer to the string to write to the display
 * Returns: nothing
 */
void LcdWriteString(unsigned char *str);

/*
 * LcdMoveCursor()
 * Moves the cursor to a specific row and column.
 * Parameters:
 *     unsigned char row: Put the cursor on this row.
 *     unsigned char col: Put the cursor in this column.
 * Returns: nothing
 * Note: No bounds checking is performed, so it's possible to set an =
illegal
 *       location.
 */
void LcdMoveCursor(unsigned char row, unsigned char col);

/*
 * LcdInit()
 * Prepare the LCD for use.  This function should be called before =
attempting
 * to actually use the LCD.
 * Parameters: none.
 * Returns: nothing.
 */
void LcdInit(void);

/*
 * LcdClear()
 * Clear the display and return the cursor to the home position.
 * Parameters: none.
 * Returns: nothing
 */
void LcdClear(void);

/*
 * LcdWriteCGRAM()
 * Store a pattern in the CGRAM at the given address.
 * Parameters:=20
 *    unsigned char addr: where we store pattern
 *    unsigned char pattern: bit pattern to store at addr
 */
void LcdWriteCGRAM(unsigned char addr, unsigned char pattern);

#endif</PRE></BODY></HTML>
